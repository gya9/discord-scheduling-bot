Ignoring exception in on_message
Traceback (most recent call last):
  File "main.py", line 98, in on_message
    await self.close()
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 486, in close
    await self.ws.close()
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/gateway.py", line 538, in close
    await super().close(code, reason)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/websockets/protocol.py", line 419, in close
    yield from asyncio.shield(self.close_connection_task)
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 251, in _run_event
    await coro(*args, **kwargs)
  File "main.py", line 109, in on_message
    await self.send2developer(traceback.format_exc())
  File "main.py", line 18, in send2developer
    await dm.send(msg)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/abc.py", line 823, in send
    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed, nonce=nonce)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 348, in _request
    raise RuntimeError('Session is closed')
RuntimeError: Session is closed
  File "main.py", line 56
    if nomessage_list != []
                          ^
SyntaxError: invalid syntax
Ignoring exception in on_message
Traceback (most recent call last):
  File "main.py", line 99, in on_message
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 486, in close
    await self.ws.close()
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/gateway.py", line 538, in close
    await super().close(code, reason)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/websockets/protocol.py", line 419, in close
    yield from asyncio.shield(self.close_connection_task)
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 251, in _run_event
    await coro(*args, **kwargs)
  File "main.py", line 110, in on_message
    df.to_csv('users.csv')
  File "main.py", line 18, in send2developer
    await dm.send(msg)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/abc.py", line 823, in send
    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed, nonce=nonce)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 348, in _request
    raise RuntimeError('Session is closed')
RuntimeError: Session is closed
Ignoring exception in on_message
Traceback (most recent call last):
  File "main.py", line 105, in on_message
    await self.close()
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 486, in close
    await self.ws.close()
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/gateway.py", line 538, in close
    await super().close(code, reason)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/websockets/protocol.py", line 419, in close
    yield from asyncio.shield(self.close_connection_task)
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 251, in _run_event
    await coro(*args, **kwargs)
  File "main.py", line 116, in on_message
    await self.send2developer(traceback.format_exc())
  File "main.py", line 18, in send2developer
    await dm.send(msg)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/abc.py", line 823, in send
    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed, nonce=nonce)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 348, in _request
    raise RuntimeError('Session is closed')
RuntimeError: Session is closed
Ignoring exception in on_message
Traceback (most recent call last):
  File "main.py", line 119, in on_message
    if message.content.startswith('!bye'):
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 486, in close
    await self.ws.close()
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/gateway.py", line 538, in close
    await super().close(code, reason)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/websockets/protocol.py", line 419, in close
    yield from asyncio.shield(self.close_connection_task)
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 251, in _run_event
    await coro(*args, **kwargs)
  File "main.py", line 130, in on_message
    await message.channel.send(m)
  File "main.py", line 19, in send2developer
    await dm.send(msg)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/abc.py", line 823, in send
    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed, nonce=nonce)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 348, in _request
    raise RuntimeError('Session is closed')
RuntimeError: Session is closed
Traceback (most recent call last):
  File "main.py", line 8, in <module>
    class MyClient(discord.Client):
  File "main.py", line 10, in MyClient
    bot_channel = self.get_channel(id_bot_channel)
NameError: name 'self' is not defined
Traceback (most recent call last):
  File "main.py", line 8, in <module>
    class MyClient(discord.Client):
  File "main.py", line 10, in MyClient
    bot_channel = self.get_channel(id_bot_channel)
NameError: name 'self' is not defined
Ignoring exception in on_message
Traceback (most recent call last):
  File "main.py", line 123, in on_message
    await self.close()
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 486, in close
    await self.ws.close()
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/gateway.py", line 538, in close
    await super().close(code, reason)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/websockets/protocol.py", line 419, in close
    yield from asyncio.shield(self.close_connection_task)
concurrent.futures._base.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/client.py", line 251, in _run_event
    await coro(*args, **kwargs)
  File "main.py", line 134, in on_message
    await self.send2developer(traceback.format_exc())
  File "main.py", line 26, in send2developer
    await dm.send(msg)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/abc.py", line 823, in send
    data = await state.http.send_message(channel.id, content, tts=tts, embed=embed, nonce=nonce)
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/discord/http.py", line 158, in request
    async with self.__session.request(method, url, **kwargs) as r:
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 1005, in __aenter__
    self._resp = await self._coro
  File "/home/bitnami/.pyenv/versions/3.7.0/lib/python3.7/site-packages/aiohttp/client.py", line 348, in _request
    raise RuntimeError('Session is closed')
RuntimeError: Session is closed
